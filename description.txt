|||||||||||| ФИНАЛЬНАЯ СБОРКА ||||||||||||
Финальная сборка, где все зависимости включены прямо в .html лежит в папке  ./dist-one-file

|||||||||||| СБОРЩИК ФРОНТА НА WEBPACK. ||||||||||||

1. УСТАНОВКА
	$ npm i

2. СТАРТ СБОРЩИКА
	2.1 DEVELOPMENT ( webpack-dev-server )
		$ npm start

		открываем:
			http://localhost:8080/webpack-dev-server/consumer-lookup.html
			http://localhost:8080/webpack-dev-server/search.html

	2.2 PRODUCTION
		$ npm run build-prod

		забираем результат из ./dist

		если надо в итоге собрать всё всё в 1 файл - к сожалению пока что только ручками,
		надо в папке ./dist открыть *.html файл и посмотреть, что он поклдючает, взять содержимое подключаемых файлов и
		вставить их сожержимое в html.



|||||||||||| ОПИСАНИЕ ПРИЛОЖЕНИЯ: ||||||||||||
	приложение состоит из нескольких страниц, к каждой из этих страниц подключен файлы common.js и  common.css и файлы для
	конкретной страницы, имеющие название [имя стриницы].css и [имя страницы].js

	приложение - это доступный глобально объект "app", в нем хранятся общий  для всех страниц код.
	скрипт каждой из станиц может использовать этот объект.

	 на странице consumer-lookup описан класс "View"

	 у него в конструкторе:
	 	- инициализируется весь ui
	 	- навешиваются обработчики на события из этого ui
	 	- инициализируется пагинция (метод "initPaginationForTable")
	 	- показывается таблица ( "this.showEl(this.ui.table)" )

	есть несколь методов для упревления ui-eм:
		hideEl
		showEl
		addClass
		removeClass

	обработчики событий...

	для сохранения таблицы в .csv используется связка:
		saveToCSV( parseTable() )

    для кроссбраузерной реализации saveToCSV() используется крохотная библиотека "file-saver"